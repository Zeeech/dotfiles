
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 用户自定义配置（该文件放一般性配置，可覆盖~/.vimrc里的配置，若要增加、卸载插件，请放入~/.vimrc.custom.plugins）
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 开启相对行号
" set relativenumber  

" 开启鼠标
" set mouse=a

" 设置光标所在列高亮
" set cursorcolumn

" indentLine 开启代码对齐线
" let g:indentLine_enabled = 1

" markdown
" let system = system('uname -s')
" if system == "Darwin\n"
"     let g:mkdp_path_to_chrome = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome"
" else
"     let g:mkdp_path_to_chrome = '/usr/bin/google-chrome-stable %U'
" endif
" nmap <silent> <F7> <Plug>MarkdownPreview
" imap <silent> <F7> <Plug>MarkdownPreview
" nmap <silent> <F8> <Plug>StopMarkdownPreview
" imap <silent> <F8> <Plug>StopMarkdownPreview

" Doxygen
" let g:DoxygenToolkit_authorName="chxuan, 787280310@qq.com"
" let s:licenseTag = "Copyright(C)\<enter>"
" let s:licenseTag = s:licenseTag . "For free\<enter>"
" let s:licenseTag = s:licenseTag . "All right reserved\<enter>"
" let g:DoxygenToolkit_licenseTag = s:licenseTag
" let g:DoxygenToolkit_briefTag_funcName="yes"
" let g:doxygen_enhanced_color=1
" let g:DoxygenToolkit_commentType="Qt"

let mapleader = ";"      " 定义<leader>键
set background=dark
colorscheme onedark
if has("termguicolors")
  " enable true color
  set termguicolors
endif

set tabstop=2
set shiftwidth=2
set expandtab
set smarttab
set ruler
set novisualbell

map <silent><F3> :NERDTreeToggle<CR>

set colorcolumn=100

" let g:airline_left_sep = ''
" let g:airline_left_alt_sep = '|'
" let g:airline_right_sep = ''
" let g:airline_right_alt_sep = '|'
" let g:airline#extensions#tabline#left_sep = ' '
" let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#formatter ='unique_tail'

let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName = 1
let g:NERDTreePatternMatchHighlightFullName = 0
let g:NERDTreeHighlightFolders = 1
let g:NERDTreeHighlightFoldersFullName = 0
let g:NERDTreeDirArrowExpandable=''
let g:NERDTreeDirArrowCollapsible=''

set cmdheight=1
set noshowmode

let g:Lf_ShortcutF = '<c-p>'
let g:Lf_ShortcutB = '<c-b>'
nmap ;f :LeaderfFunction<CR>
nmap ;t :LeaderfTag<CR>
nmap ;b :LeaderfBuffer<CR>
" let g:Lf_PreviewInPopup = 0
" let g:Lf_WindowPosition = 'popup'


autocmd FileType c,cpp,cc,h,hpp setlocal equalprg=clang-format
let g:NERDSpaceDelims=1

let g:ycm_show_diagnostics_ui = 0
let g:ycm_min_num_identifier_candidate_chars = 2
let g:ycm_collect_identifiers_from_comments_and_strings = 1

let g:ycm_semantic_triggers =  {
			\ 'c,cpp,python,java,go,erlang,perl': ['re!\w{2}'],
			\ 'cs,lua,javascript': ['re!\w{2}'],
			\ }
" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
let g:UltiSnipsSnippetDirectories=["UltiSnips"]


command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)
" 绑定快捷键
nnoremap <leader>r :Rg<CR>


" vimwiki
let g:vimwiki_list = [{'path': '~/dotfiles/vimwiki/'}]
